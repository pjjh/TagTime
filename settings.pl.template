# Settings for TagTime.
# This file must be in your home directory, called .tagtimerc
# NB: restart the daemon (tagtimed.pl) if you change this file.

$usr = "__USER__";   # CHANGEME to your username
$path = "__PATH__";  # CHANGEME to your path to tagtime
        if($path !~ /\/$/) { $path.="/"; }

use Sys::Hostname;
if ( 1 ) {  # CHANGE to 0 to enable host-specific file naming, 1 to disable
  $logf = "$path$usr.log";  # log file for pings
} else {
  # log.txt ending can be useful for aggregation scripts *.log.txt
  # the .txt is because ifttt dropbox appending forces the .txt suffix
  $host = get_hostname;
  $logf = "$path$usr.$host.log.txt";  # log file for pings
}


# CHANGEME a map of host names to short names
# the lookup code will also check for prefixes
# running in Terminal will reveal what host name it finds
# if you ever get a log file called 'nohost', that's what happened
%hostmap = (
    'Mac-mini.local'       => 'home',
    'Philips-Mac.local'    => 'work',
    'MacBook-Air.local'    => 'mba',
    'macbook'              => 'mba',
    'macbook-air'          => 'mba',
    'macbook-air.lan'      => 'mba',
    'macbook-air.home'     => 'mba',
    'macbook-air.default'  => 'mba',
    );

# If you're using windows, you'll need cygwin and to set this flag to 1:
$cygwin = __CYGWIN__;  # CHANGEME to 1 if you're using windows/cygwin.

$ED = "__ED__ +";  # CHANGEME if you don't like vi (eg: /usr/bin/pico)
$XT = "__XT__";    # CHANGEME to your path to xterm

# WARNING: don't configure your Beeminder settings here if using bmndr.merge.sh

# Get your personal Beeminder auth token (after signing in) from
#   https://www.beeminder.com/api/v1/auth_token.json
$beemauth = "abc123";  # CHANGEME to your personal beeminder auth token

# CHANGEME by adding entries for each beeminder graph you want to auto-update:
%beeminder = (
  #"alice/work" => "job",  # all "job" pings get added to bmndr.com/alice/work
  #"bob/play" => ["fun","whee"], # pings w/ "fun" and/or "whee" sent to bob/play

  # ADVANCED USAGE: regular expressions
  # pings tagged like "eat1", "eat2", "eat3" get added to carol/food:
  #"carol/food" => qr/\beat\d+\b/,

  # ADVANCED USAGE: plug-in functions
  # pings tagged anything except "afk" get added to "dan/nafk":
  #"dan/nafk" => sub { return shift() !~ /\bafk\b/; }
  # pings tagged "workout" get added to dave/tueworkouts, but only on tuesdays:
  #"dave/tueworkouts" => sub { my @now = localtime();
  # return shift() =~/\bworkout\b/ && $now[6] == 2;
  #}
);


sub get_hostname {
 # looped because hostname sometimes gets confused
  while ( 1 ) {
    $host = hostname;
    last if $host;
    sleep 1;
  }
  if ( $hostmap{$host} ) {
    $host = $hostmap{$host};
  }
  elsif ( $host ) {
    $host =~ /^([\w\d]+).*/;
    my $prefix = $1;
    if ( exists $hostmap{$prefix} ) {
      $host = $hostmap{$prefix};
    }
    else {
      print STDERR "unmapped host: '$host', using '$prefix'\n";
      $host = $prefix;
    }
  }
  else {
    print STDERR "no host\n";
    $host = 'nohost';
  }
  return $host;
}



## CONFIG ##
# Add more tags when merging files

# Date Range tags, for trips
# NB: an additional tag, 'abroad', is added for all of these
#     which might be less appropriate if you use this to tag events
# TODO dates, not timestamps
#      right now is `date +%s`
#      next week is `date -v+7d +%s`
#      OR, look at your logfile post-trip and use the first & last pings
# TODO multiple tags? i.e. reverse so it's [ first, final, [tagset] ]
#      That would mean I can avoid hardcoding 'abroad' in merge.pl
@daterange_tags = (
  # format triples: [ 'destination', first_ts, final_ts ], 
  [ 'netherlands', 1358166624, 1358365256 ],
  [ 'netherlands', 1358757945, 1359028825 ],
  [ 'netherlands', 1360164883, 1360274951 ],
  [ 'netherlands', 1361880310, 1362077437 ],
  [ 'netherlands', 1362501437, 1362680810 ],
  [ 'netherlands', 1363093877, 1363288925 ],
  [ 'edmonton',    1376381479, 1377625840 ],
  [ 'portland',    1377625841, 1377871618 ],
  [ 'netherlands', 1378816349, 1379016707 ],
  [ 'paris',       1380034862, 1380233632 ],
  [ 'paris',       1384777825, 1384888593 ],
  [ 'manchester',  1396787002, 1396894201 ],
  [ 'paris',       1397569700, 1398023063 ],
  [ 'cardiff',     1398776760, 1398879163 ],
  [ 'copenhagen',  1407653148, 1408302352 ],
  [ 'manchester',  1414242121, 1414446561 ],
);

# postprocess time-periods 
# sorted array of [ first_ts, 'tag' ], [ final_ts + 1 second, undef ]
@merge_tags = ();
foreach my $aref ( sort { $a->[1] <=> $b->[2] } @daterange_tags ) { 
  push @merge_tags, [ $aref->[1], $aref->[0] ], [ $aref->[2]+1, undef ];
}


# categorise or add correct tags
# n.b. these get remapped, so you can't have one tag imply 2 others
# but you *can* add a category tag for a category tag
%category_tags = (
  # format:
  # cat_tag => [ 'tag1', 'tag2' ],

  # conferences
  conf => [ 'bcs2013', 'eac2013', 'eac2014', 'efma2013', 'idc2014', 'int2014', 'june2013', 'unicom', 'unicom2013' ],

  # fitness
  fit => [ 'flex', 'gym', 'run', 'salsa', 'swim', 'trapeze', 'walk' ],

  # professional development
  profdev => [ 'gurteen', 'krypton', 'scio', 'pkm', 'anki' ],

  # data fixes
  june2013 => [ 'june2023' ],
  bmndr    => [ 'ebmndr', 'knbmndr', 'tbmndr', 'beemsup', 'beemad' ],
  speak    => [ 'speaking' ],

);

# post-process category tags
%merge_tags = ();
while ( my ($cat_tag, $tag_array) = each %category_tags) {
  for my $tag ( @$tag_array ) {
    $merge_tags{ $tag } = $cat_tag;
  }
}


# Pings from more than this many seconds ago get autologged with tags "afk" and 
# "RETRO". (Pings can be overdue either because the computer was off or tagtime 
# was waiting for you to answer a previous ping. If the computer was off, the 
# tag "off" is also added.)
$retrothresh = 60;

$gap = 45*60; # Average number of seconds between pings (eg, 60*60 = 1 hour).

$seed = 666; # For pings not in sync with others, change this (NB: > 0).

$linelen = 79; # Try to keep log lines at most this long.

$catchup = 0;  # Whether it beeps for old pings, ie, should it beep a bunch
               # of times in a row when the computer wakes from sleep.

$enforcenums = 0;  # Whether it forces you to include a number in your
                   # ping response (include tag non or nonXX where XX is day 
                   # of month to override). This is for task editor integration.

# System command that will play a sound for pings.
# Often "play" or "playsound" on Linux, or "afplay" on Mac osx.
# $playsound = "afplay ${path}sound/blip-twang.wav";
# $playsound = "echo -e '\a'"; # this is the default if $playsound not defined.
# $playsound = "";  # makes tagtime stay quiet.


1; # When requiring a library in perl it has to return 1.
